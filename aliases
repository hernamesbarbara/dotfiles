#!/bin/bash

# postgresql server
alias pgdown="pg_ctl -D /usr/local/var/postgres stop -s -m fast"
alias pgup="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"

# create a scratch.sql file on the desktop and open it
alias ss="> ~/Desktop/scratch.sql; open ~/Desktop/scratch.sql"

# ipython qtconsole
alias ipy='ipython qtconsole --ConsoleWidget.font_family="Consolas" --ConsoleWidget.font_size=13 --pylab=inline'
alias ipynb='ipython notebook --ConsoleWidget.font_family="Consolas" --ConsoleWidget.font_size=13 --pylab=inline'

# vhosts
alias hosts='sudo vim /etc/hosts'
alias vhosts='sudo vim /etc/apache2/extra/httpd-vhosts.conf'

# cleanup aliases
# remove .DS_Store recursively
alias rmdss="find . -name '*.DS_Store' -type f -delete"
# remove .swo recursively
alias rmswo="find . -name '*.swo' -type f -delete"
# remove .swp recursively
alias rmswp="find . -name '*.swp' -type f -delete"

# remove pyc files recursively
alias rmpyc="find . -name '*.pyc' -type f -delete"

# copy working directory
# or pass filename to get the path to that file
# replace your username with tilde ~/ 
function cwd() {
    if [ -z "$1" ]
    then
        N=$(pwd -P)
    else
        N="$1"
    fi
    N=$(echo -e "$N" | sed -e "s/\/Users\/$(whoami)/~/g")
    N=$(echo -e "$N" | sed 's/ /\\ /g')
    N=$(echo -e "$N" | sed 's/(/\\(/g')
    N=$(echo -e "$N" | sed 's/)/\\)/g')
    echo -e "$N" | tr -d '\r\n' | pbcopy
}

alias excel="open -a Microsoft\ Excel"

# copy file interactive
alias cp='cp -i'

# move file interactive
alias mv='mv -i'

# untar
alias untar='tar xvf'

# make new directory and  cd into it
function mkd () { mkdir -p "$@" && cd "$@"; }

# Detect which `ls` flavor is in use
# -G use colors 
# -p add trailing slash to directories 
# -F append a * after executables
if ls --color > /dev/null 2>&1; then # GNU `ls`
  colorflag="--color"
else # OS X `ls`
  colorflag="-GFp"
fi

# colorize the output of the `ls` command
# use the first set of colors if you have a light terminal 
# use the second set if you have a dark terminal
# export LSCOLORS=Exfxcxdxbxegedabagacad
export LSCOLORS=gxfxcxdxbxegedabagacad # Dark lscolor scheme

# some other color stuff idk about.
# Always use color output for `ls`
# alias ls="command ls ${colorflag}"
alias ls="ls ${colorflag}"
# export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'

alias ~='cd ~'
alias ..='cd ..'
alias o='open '
alias h='history '

# Long list colorized w/ size in human understandable form
alias ll='ls ${colorflag} -lh'

# List all files colorized in long format, including dot files
alias la="ls ${colorflag} -lha"

# List only directories
alias lsd='ls ${colorflag} -l | grep "^d"'

# List current directory contents by last modified descending.
alias lst="ls ${colorflag} -lt"

# `lh` or list hidden. Displays only hidden (dot) files names.
alias lh='ls ${colorflag} -a | egrep "^\."'

# Call from a local repo to open the repository on github in browser
function github() {
 giturl=$(git config --get remote.origin.url)
 if [ -z "$giturl" ]
    then
        echo "Not a git repository or no remote.origin.url set";
    else
        giturl=${giturl/git\@github\.com\:/https://github.com/}
        giturl=${giturl/\.git//}
        echo $giturl
        open $giturl
    fi
}

# Query Wikipedia via console over DNS
mwiki() { dig +short txt "$*".wp.dg.cx; }

# Enter the matrix
alias matrix='COL=$(( $(tput cols) / 2 )); clear; tput setaf 2; while :; do tput cup $((RANDOM%COL)) $((RANDOM%COL)); printf "%$((RANDOM%COL))s" $((RANDOM%2)); done'

# Get colors in manual pages
man() {
 env \
 LESS_TERMCAP_mb=$(printf "\e[1;31m") \
 LESS_TERMCAP_md=$(printf "\e[1;31m") \
 LESS_TERMCAP_me=$(printf "\e[0m") \
 LESS_TERMCAP_se=$(printf "\e[0m") \
 LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
 LESS_TERMCAP_ue=$(printf "\e[0m") \
 LESS_TERMCAP_us=$(printf "\e[1;32m") \
 man "$@"
}

#######################################
# converts a number to English human-readable format 
# Globals:
#   None
# Arguments:
#   a number
# Returns:
#   None
# Example:
#        hernamesbarbara at MacBook-Air in ~
#        $ numberToWords 250000000000
#        two hundred and fifty billion
#######################################
function numberToWords() {
    n="$1"
    data="'__EVENTTARGET=&__EVENTARGUMENT=&__REQUESTDIGEST=0x46489743E32320E826D7E36B010AC7C96BA254A756A34ADCC8079BDC4947D6FA0B16782C206FDE3317A293328C5C32CE2D17BF8A4BDF4DC36D88A0AC9DAE1713%2C21+Feb+2014+00%3A00%3A18+-0000&__VIEWSTATE=%2FwEPDwUBMGRkezo7M8vrv7UZcDBCvmWXHARAwzw%3D&__EVENTVALIDATION=%2FwEWAwKY5bhhApL5orAMAojBlLcLEMpLZkPmdzqLrY6bWh0KwGiyGuM%3D&ctl00%24PlaceHolderMain%24TextboxPart1%24value=${n}&ctl00%24PlaceHolderMain%24ButtonPart1%24ctl00=Convert+to+Text'"
    curl -s -X POST --data ${data} http://www.calculator.org/calculate-online/mathematics/text-number.aspx | grep ctl00_PlaceHolderMain_g_9554de2f_4c98_4d88_9305_ea23437965b8_ctl00 | grep -E -o ">.+<" | tr -d "<>"
}

export numberToWords

alias path="echo $PATH | tr : '\n'"
