#!/usr/bin/env bash

is_valid_command () { 
    : '
    Use 1st arg for command substitution. concat 1..n args together 
        is_valid_command "ls --color -F --quote-name" => splits into `ls` + `--color...`
    '
    i=0
    param_str=""
    for word in $(echo "$@"); do
        if [ $i -eq 0 ] ; then
            cmd_str="$word"
        else
            param_str="$param_str $word"
        fi
        i=$[i +1]
    done
    type $cmd_str &> /dev/null && 
        eval $(echo "$cmd_str $param_str") &> /dev/null
        # debug with `echo "$?"`
}

# copy working directory
# or pass filename to get the path to that file
# replace your username with tilde ~/ 
# on OS X you can install `greadlink` via: `brew install coreutils`
function cwd() {
    if [ "$1" != "" ]
        then
            P=$(greadlink "$1" -f --no-newline)
        else
            P=$(greadlink "." -f --no-newline)
    fi
    P=$(echo -e "$P" | sed -e "s/\/Users\/$(whoami)/~/g")
    P=$(echo -e "$P" | sed 's/ /\\ /g')
    P=$(echo -e "$P" | sed 's/(/\\(/g')
    P=$(echo -e "$P" | sed 's/)/\\)/g')
    echo -e "$P" | tr -d '\r\n' | pbcopy
}

# run a simple HTTP server w/ single command
server () {
    if [ "$1" != "" ]
        then
            server_port=$1
        else
            server_port=5000
    fi
    open http://localhost:$server_port && python -m SimpleHTTPServer $server_port
}

# DATABASES
alias pgdown="pg_ctl -D /usr/local/var/postgres stop -s -m fast"
alias pgup="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"
alias pgstatus='pg_ctl status'

# IPYTHON
alias ipy='ipython --profile hernamesbarbara'
alias ipyq='ipython qtconsole'
alias ipynb='ipython notebook'

# SAFE CLEANUP - delete junk files safely + recursively
alias rmdss="find . -name '*.DS_Store' -type f -delete"
alias rmswo="find . -name '*.swo' -type f -delete"
alias rmswp="find . -name '*.swp' -type f -delete"
alias rmpyc="find . -name '*.pyc' -type f -delete"
alias rmjunk="rmdss && rmswo && rmswp && rmpyc && clear"

# find file by name within current working directory
alias findh="find . -name "

find_and_rm () {
    find . -type f -name "$1" | xargs rm
}

function last_cmd_status () {
  if [ $? = 0 ]; then
    echo -e '\e[32m0\e[0m'
    return 0
  else
    echo -e '\e[31m$?\e[0m'
  return $?
fi
}

alias excel="open -a Microsoft\ Excel"
alias chrome="open -a Google\ Chrome"
alias rodeo="open -a Rodeo"

# interactive copy + move comamnds to prompt before overwriting files
alias cp='cp -i'
alias mv='mv -i'


# untar / archive data formats
alias untar='tar xvf'

# make a folder and cd into it.
function mkd () { mkdir -p "$@" && cd "$@"; }

# dircolors is only relevant if you are using 
if is_valid_command dircolors; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Detect which `ls` flavor is in use
if is_valid_command ls -F --color --quote-name; then
    # GNU `ls`
    # -F            => append indicator (e.g. * for executables and / for directories)
    # --quote-name  => surround folder names in quotes
    # -N            => print raw entry names 
    colorflag="-FN --color"
else 
    # OS X `ls`
    # -G use colors 
    # -p add trailing slash to directories 
    # -F append * for executables
    colorflag="-GFp"
fi

alias ~='cd ~'
alias home="cd $HOME"
alias ..='cd ..'
alias ..2='cd ..'
alias o='open '
alias h='history '
alias ls="ls ${colorflag}"

# Long list colorized w/ size in human understandable form
alias ll='ls -lh --block-size=MB'

# List all files colorized in long format, including dot files
alias la="ls -lha --block-size=MB"

# List only directories
alias lsd='ls --block-size=MB -dl */'

# `ls` by last modified date descending
alias lst="ls --block-size=MB -lt"

# `ls` only hidden files
alias lh="ls -ld .[!.]* --block-size=MB"

alias ls5="lst | head -n 5"
alias ls10="lst | head -n 10"

# cat with syntax highlighting (requires pygments which should be installed by default)
alias cat='pygmentize -O style=solarizeddark -f console256 -g'

# print path
alias ppath="echo $PATH | tr : '\n'"


function followers() {
    SCREEN_NAME=`t whoami | grep Name | cut -d',' -f1 | cut -d'e' -f2`
    SCREEN_NAME=`echo "$SCREEN_NAME" | xargs`
    N_FOLLOWERS=`t whoami | grep Followers | cut -d " " -f2-10`
    TEXT="$SCREEN_NAME has "$N_FOLLOWERS" followers"
    if [ "$SCREEN_NAME" = "Yhat" ]
        then
            SCREEN_NAME="why-hat"
    fi
    MSG="$SCREEN_NAME has "$N_FOLLOWERS" followers"
    echo $TEXT
    say $MSG
}

# Call from a local repo to open the repository on github in browser
function github() {
 giturl=$(git config --get remote.origin.url)
 if [ -z "$giturl" ]
    then
        echo "Not a git repository or no remote.origin.url set";
    else
        giturl=${giturl/git\@github\.com\:/https://github.com/}
        giturl=${giturl/\.git//}
        echo $giturl
        open $giturl
    fi
}

# Query Wikipedia via console over DNS
mwiki() { dig +short txt "$*".wp.dg.cx; }

# Enter the matrix
alias matrix='COL=$(( $(tput cols) / 2 )); clear; tput setaf 2; while :; do tput cup $((RANDOM%COL)) $((RANDOM%COL)); printf "%$((RANDOM%COL))s" $((RANDOM%2)); done'

# Get colors in manual pages
man() {
 env \
 LESS_TERMCAP_mb=$(printf "\e[1;31m") \
 LESS_TERMCAP_md=$(printf "\e[1;31m") \
 LESS_TERMCAP_me=$(printf "\e[0m") \
 LESS_TERMCAP_se=$(printf "\e[0m") \
 LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
 LESS_TERMCAP_ue=$(printf "\e[0m") \
 LESS_TERMCAP_us=$(printf "\e[1;32m") \
 man "$@"
}

#######################################
# converts a number to English human-readable format 
# Globals:
#   None
# Arguments:
#   a number
# Returns:
#   None
# Example:
#        hernamesbarbara at MacBook-Air in ~
#        $ numberToWords 250000000000
#        two hundred and fifty billion
#######################################
function numberToWords() {
    n="$1"
    data="'__EVENTTARGET=&__EVENTARGUMENT=&__REQUESTDIGEST=0x46489743E32320E826D7E36B010AC7C96BA254A756A34ADCC8079BDC4947D6FA0B16782C206FDE3317A293328C5C32CE2D17BF8A4BDF4DC36D88A0AC9DAE1713%2C21+Feb+2014+00%3A00%3A18+-0000&__VIEWSTATE=%2FwEPDwUBMGRkezo7M8vrv7UZcDBCvmWXHARAwzw%3D&__EVENTVALIDATION=%2FwEWAwKY5bhhApL5orAMAojBlLcLEMpLZkPmdzqLrY6bWh0KwGiyGuM%3D&ctl00%24PlaceHolderMain%24TextboxPart1%24value=${n}&ctl00%24PlaceHolderMain%24ButtonPart1%24ctl00=Convert+to+Text'"
    curl -s -X POST --data ${data} http://www.calculator.org/calculate-online/mathematics/text-number.aspx | grep ctl00_PlaceHolderMain_g_9554de2f_4c98_4d88_9305_ea23437965b8_ctl00 | grep -E -o ">.+<" | tr -d "<>"
}

alias ignore="gibo Python R SublimeText Node macOS Go Julia >> .gitignore"
